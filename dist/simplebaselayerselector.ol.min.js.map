{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/simplebaselayerselector.html","webpack:///./src/impl/ol/js/simplebaselayerselectorcontrol.js","webpack:///./src/facade/js/simplebaselayerselectorcontrol.js","webpack:///./src/facade/js/simplebaselayerselector.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","SimplebaselayerselectorControl","M","impl","Control","map","html","getMapImpl","getInteractions","forEach","interaction","ol","DoubleClickZoom","dblClickInteraction_","config","utils","isUndefined","SimplebaselayerselectorImplControl","exception","template","templateVars","displayBaseLayersInLayerSwitcher","Promise","success","fail","compileSync","element","addEvents","map_","on","evt","COMPLETED","setConfig","CHANGE_WMC","this","layerSelector","querySelector","addEventListener","animate","width","height","offset","layers","length","duration","easing","iterations","setTimeout","divImagenes","document","getElementsByClassName","style","display","NodeList","event_name","callback","useCapture","querySelectorAll","event","currentTarget","border","e","find","target","selectLayer","setProperty","getControls","scaleline","left","bottom","position","background","paddingLeft","paddingRight","paddingTop","paddingBottom","borderRadius","boxShadow","opacity","control","getBaseLayers","baseLayers","Array","index","layer","impl_","transparent","push","selectedLayer","selectedLayerImg","legendUrl_","selectedLayerLegend","legend","layerName","displayInLayerSwitcher","vars","selectedLayerLegendURL","selectedLayerName","render","changeSelectedLayerStyle","getElementById","src","alt","title","changeVisible","children","innerHTML","updateSelectedLayer","getAttribute","baseLayer","setVisible","baseLayersImg","className","Simplebaselayerselector","Plugin","controls_","metadata_","api","metadata","control_","panel_","ui","Panel","collapsible","BL","collapsedButtonClass","tooltip","addControls","addPanels","window","plugin","M$plugin$Simplebaselayerselector","M$control$SimplebaselayerselectorControl","M$impl$control$SimplebaselayerselectorControl"],"mappings":"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","file":"simplebaselayerselector.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = \"<div id=\\\"contenedor-selector-baselayer\\\" class=\\\"m-control m-container m-test\\\">\\n  <div id=\\\"baseLayer-content\\\">\\n    <img id=\\\"selectedBaseLayer\\\" class=\\\"m-selector-baselayer-selected-image\\\" src=\\\"{{selectedLayerLegendURL}}\\\" alt=\\\"{{selectedLayerLegend}}\\\" title=\\\"{{selectedLayerLegend}}\\\" name=\\\"{{selectedLayerName}}\\\">\\n  </div>\\n  <div id=\\\"contenedor-baseLayer-layers\\\">\\n    {{#each layers}}\\n      {{#if @first}}\\n      <div id=\\\"{{this.name}}\\\" class=\\\"m-selector-baselayer-layers-content\\\">\\n        <img class=\\\"m-selector-baselayer-layers-image-seleccionada\\\" src=\\\"{{this.impl_.legendUrl_}}\\\" alt=\\\"{{this.legend}}\\\" title=\\\"{{this.legend}}\\\" name=\\\"{{this.name}}\\\">\\n      </div>\\n      {{else}}\\n    <div id=\\\"{{this.name}}\\\" class=\\\"m-selector-baselayer-layers-content\\\">\\n      <img class=\\\"m-selector-baselayer-layers-image\\\" src=\\\"{{this.impl_.legendUrl_}}\\\" alt=\\\"{{this.legend}}\\\" title=\\\"{{this.legend}}\\\" name=\\\"{{this.name}}\\\">\\n    </div>\\n    {{/if}}\\n   {{/each}}\\n  </div>\\n</div>\";","/**\n * @module M/impl/control/SimplebaselayerselectorControl\n */\nexport default class SimplebaselayerselectorControl extends M.impl.Control {\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {HTMLElement} html of the plugin\n   * @api stable\n   */\n  addTo(map, html) {\n    // obtengo la interacción por defecto del dblclick para manejarla\n    const olMap = map.getMapImpl();\n    olMap.getInteractions().forEach((interaction) => {\n      if (interaction instanceof ol.interaction.DoubleClickZoom) {\n        this.dblClickInteraction_ = interaction;\n      }\n    });\n\n    // super addTo - don't delete\n    super.addTo(map, html);\n  }\n\n  // Add your own functions\n}\n","/* eslint-disable no-console */\n\n/**\n * @module M/control/SimplebaselayerselectorControl\n */\n\nimport SimplebaselayerselectorImplControl from 'impl/simplebaselayerselectorcontrol';\nimport template from 'templates/simplebaselayerselector';\n\nexport default class SimplebaselayerselectorControl extends M.Control {\n  /**\n   * @classdesc\n   * Main constructor of the class. Creates a PluginControl\n   * control\n   *\n   * @constructor\n   * @extends {M.Control}\n   * @api stable\n   */\n  constructor(config) {\n    // 1. checks if the implementation can create PluginControl\n    if (M.utils.isUndefined(SimplebaselayerselectorImplControl)) {\n      M.exception('La implementación usada no puede crear controles SimplebaselayerselectorControl');\n    }\n    // 2. implementation of this control\n    const impl = new SimplebaselayerselectorImplControl();\n    super(impl, 'Simplebaselayerselector');\n    this.template = template;\n    this.templateVars = '';\n    this.config = config\n\n    if (this.config) {\n      this.displayBaseLayersInLayerSwitcher = this.config.displayBaseLayersInLayerSwitcher\n    } else {\n      this.displayBaseLayersInLayerSwitcher = false;\n    }\n  }\n\n  /**\n   * This function creates the view\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api stable\n   */\n  createView(map) {\n    return new Promise((success, fail) => {\n      const html = M.template.compileSync(this.template, this.templateVars);\n      // Añadir código dependiente del DOM\n      this.element = html;\n      this.addEvents(html);\n      success(html);\n      //Se controla la carga inicial del mapa\n      this.map_.on(M.evt.COMPLETED, () => {\n        this.setConfig()\n      })\n      //Se controla la carga o cambio de WMC\n      this.map_.on(M.evt.CHANGE_WMC, () => {\n        this.setConfig()\n      })\n    });\n  }\n\n  addEvents(html) {\n    this.layerSelector = html.querySelector('div#contenedor-baseLayer-layers');\n    html.addEventListener('click', () => {\n      this.layerSelector.animate([\n        { width: \"0px\", height: '0px', offset: 0 },\n        { width: ((this.layers.length * 76) + 10) + 'px', height: '85px', offset: 1 }\n      ], {\n        duration: 300,\n        easing: 'ease',\n        iterations: 1\n      });\n\n      setTimeout(function () {\n        this.divImagenes = document.getElementsByClassName(\"m-selector-baselayer-layers-content\");\n        for (var i = 0; i < this.divImagenes.length; i++) {\n          this.divImagenes[i].style.display = \"block\";\n        }\n      }, 200);\n      this.layerSelector.style.width = ((this.layers.length * 76) + 10) + 'px';\n      this.layerSelector.style.display = 'inline-block';\n\n    })\n    NodeList.prototype.addEventListener = function (event_name, callback, useCapture) {\n      for (var i = 0; i < this.length; i++) {\n        this[i].addEventListener(event_name, callback, useCapture);\n      }\n    };\n    html.querySelectorAll('div.m-selector-baselayer-layers-content').addEventListener('mouseleave', (event) => {\n      let target = event.currentTarget;\n      target.style.border = 'solid 2px #cdcdcd';\n    });\n\n    html.querySelectorAll('div.m-selector-baselayer-layers-content').addEventListener('click', (e) => {\n      let find = false;\n      do {\n        for (let i = 0; i < this.layers.length; i++) {\n          if (this.layers[i].name == e.target.name) {\n            this.selectLayer(this.layers[i])\n            find = true;\n          }\n        }\n      } while (!find);\n    });\n\n    this.layerSelector.addEventListener('mouseover', () => {\n      this.layerSelector.style.display = 'inline-block';\n    })\n\n    this.layerSelector.addEventListener('mouseleave', () => {\n      this.divImagenes = document.getElementsByClassName(\"m-selector-baselayer-layers-content\");\n      for (var i = 0; i < this.divImagenes.length; i++) {\n        this.divImagenes[i].style.setProperty(\"display\", \"none\");\n      }\n      this.layerSelector.style.display = 'none';\n    })\n\n    if (this.map_.getControls({ 'name': 'scaleline' })) {\n      let scaleline = document.getElementsByClassName('m-scaleline')[0];\n      scaleline.style.left = '100px';\n      scaleline.style.bottom = '10px';\n      scaleline.style.position = 'absolute';\n      scaleline.style.background = '#ffffff';\n      scaleline.style.paddingLeft = '15px';\n      scaleline.style.paddingRight = '15px';\n      scaleline.style.paddingTop = '3px';\n      scaleline.style.paddingBottom = '3px';\n      scaleline.style.borderRadius = '15px 15px 15px 15px';\n      scaleline.style.boxShadow = '5px 5px 5px rgb(71, 71, 71)';\n      scaleline.style.opacity = '0.7';\n    }\n  }\n\n  /**\n   * This function is called on the control activation\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  activate() {\n    // calls super to manage de/activation\n    super.activate();\n  }\n  /**\n   * This function is called on the control deactivation\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  deactivate() {\n    // calls super to manage de/activation\n    super.deactivate();\n  }\n  /**\n   * This function gets activation button\n   *\n   * @public\n   * @function\n   * @param {HTML} html of control\n   * @api stable\n   */\n  getActivationButton(html) {\n    return html.querySelector('.m-simplebaselayerselector button');\n  }\n\n  /**\n   * This function compares controls\n   *\n   * @public\n   * @function\n   * @param {M.Control} control to compare\n   * @api stable\n   */\n  equals(control) {\n    return control instanceof SimplebaselayerselectorControl;\n  }\n\n  // Add your own functions\n\n  setConfig() {\n    this.layers = this.map_.getBaseLayers();\n    this.baseLayers = new Array();\n    for (let index = 0; index < this.layers.length; index++) {\n      const layer = this.layers[index];\n      if (layer.impl_.transparent == false) {\n        this.baseLayers.push(layer)\n      }\n    }\n    this.selectedLayer = this.baseLayers[0];\n    this.selectedLayerImg = this.selectedLayer.impl_.legendUrl_;\n    this.selectedLayerLegend = this.selectedLayer.legend\n    this.layerName = this.selectedLayer.name\n\n    //oculto los baseLayers del layerswitcher si el control existe y \n    if (this.displayBaseLayersInLayerSwitcher == false) {\n      if (this.map_.getControls({ 'name': 'layerswitcher' }).length > 0) {\n        for (let index = 0; index < this.layers.length; index++) {\n          const element = this.layers[index];\n          element.displayInLayerSwitcher = false;\n        }\n      }\n    }\n    this.templateVars = { vars: { selectedLayerLegend: this.selectedLayerLegend, selectedLayerLegendURL: this.selectedLayerImg, selectedLayerName: this.layerName, layers: this.baseLayers } };\n    this.render()\n  }\n\n  selectLayer(layer) {\n    this.changeSelectedLayerStyle(event.target.name)\n    document.getElementById('selectedBaseLayer').src = layer.impl_.legendUrl_;\n    document.getElementById('selectedBaseLayer').alt = layer.legend;\n    document.getElementById('selectedBaseLayer').title = layer.legend;\n\n    this.changeVisible(layer.name);\n\n    if (this.map_.getControls({ 'name': 'layerswitcher' }).length > 0) {\n      this.map_.getControls({ 'name': 'layerswitcher' })[0].render();\n    }\n  }\n\n  render() {\n    const html = M.template.compileSync(this.template, this.templateVars);\n    this.element.children[0].innerHTML = html.children[0].innerHTML;\n    this.element.children[1].innerHTML = html.children[1].innerHTML;\n\n    if (this.map_.getControls({ 'name': 'layerswitcher' }) && this.displayBaseLayersInLayerSwitcher) {\n      setTimeout(()=>{\n        let baseLayersSwitcher = document.getElementById('m-layerswitcher-panel');\n      baseLayersSwitcher.addEventListener('click', (event) => {\n        let selectedLayer = event.target\n        this.updateSelectedLayer(selectedLayer.getAttribute('data-layer-name'))\n      })\n      },200)    \n    }\n    //añado el listener click de los baseLayers\n    this.element.querySelectorAll('div.m-selector-baselayer-layers-content').addEventListener('click', (e) => {\n      let find = false;\n      do {\n        for (let i = 0; i < this.layers.length; i++) {\n          if (this.layers[i].name == e.target.name) {\n            this.selectLayer(this.layers[i])\n            find = true;\n          }\n        }\n      } while (!find);\n    });\n  }\n\n  changeVisible(name) {\n    for (let index = 0; index < this.baseLayers.length; index++) {\n      const baseLayer = this.baseLayers[index];\n      if (baseLayer.name == name) {\n        baseLayer.setVisible(true);\n      } else {\n        baseLayer.setVisible(false);\n      }\n    }\n  }\n\n  changeSelectedLayerStyle(selectedLayer) {\n    let baseLayersImg = document.getElementById('contenedor-baseLayer-layers').querySelectorAll('img');\n    for (let index = 0; index < baseLayersImg.length; index++) {\n      const element = baseLayersImg[index];\n      if (element.name == selectedLayer) {\n        element.className = 'm-selector-baselayer-layers-image-seleccionada'\n      } else {\n        element.className = 'm-selector-baselayer-layers-image'\n      }\n    }\n  }\n\n  updateSelectedLayer(layerName) {\n    let find = false;\n    do {\n      for (let i = 0; i < this.layers.length; i++) {\n        if (this.layers[i].name == layerName) {\n          this.selectLayer(this.layers[i])\n          this.selectedLayer = this.layers[i];\n          find = true;\n        }\n      }\n    } while (!find);\n\n    document.getElementById('selectedBaseLayer').src = this.selectedLayer.impl_.legendUrl_;\n    document.getElementById('selectedBaseLayer').alt = this.selectedLayer.legend;\n    document.getElementById('selectedBaseLayer').title = this.selectedLayer.legend;\n    this.changeSelectedLayerStyle(layerName)\n  }\n}\n","/**\n * @module M/plugin/Simplebaselayerselector\n */\nimport 'assets/css/simplebaselayerselector';\nimport SimplebaselayerselectorControl from './simplebaselayerselectorcontrol';\nimport api from '../../api.json';\n\nexport default class Simplebaselayerselector extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @param {Object} impl implementation object\n   * @api stable\n   */\n  constructor(config) {\n    super();\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n    this.config = config\n\n    /**\n     * Array of controls\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.controls_ = [];\n\n    /**\n     * Metadata from api.json\n     * @private\n     * @type {Object}\n     */\n    this.metadata_ = api.metadata;\n  }\n\n  /**\n   * This function adds this plugin into the map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map the map to add the plugin\n   * @api stable\n   */\n  addTo(map) {\n    this.control_ = new SimplebaselayerselectorControl(this.config)\n    this.controls_.push(this.control_);\n    this.map_ = map;\n    // panel para agregar control - no obligatorio\n    this.panel_ = new M.ui.Panel('panelSimplebaselayerselector', {\n      collapsible: false,\n      className: 'm-selector-baselayer',\n      position: M.ui.position.BL,\n      collapsedButtonClass: 'g-cartografia-flecha-izquierda',\n      tooltip: 'Seleciona Capa Base'\n    });\n    this.panel_.addControls(this.controls_);\n    map.addPanels(this.panel_);\n  }\n\n  /**\n   * This function gets metadata plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  getMetadata(){\n    return this.metadata_;\n  }\n}\n","import M$plugin$Simplebaselayerselector from '/home/epardo/proyectos/simplebaselayerselector/src/facade/js/simplebaselayerselector';\nimport M$control$SimplebaselayerselectorControl from '/home/epardo/proyectos/simplebaselayerselector/src/facade/js/simplebaselayerselectorcontrol';\nimport M$impl$control$SimplebaselayerselectorControl from '/home/epardo/proyectos/simplebaselayerselector/src/impl/ol/js/simplebaselayerselectorcontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.Simplebaselayerselector = M$plugin$Simplebaselayerselector;\nwindow.M.control.SimplebaselayerselectorControl = M$control$SimplebaselayerselectorControl;\nwindow.M.impl.control.SimplebaselayerselectorControl = M$impl$control$SimplebaselayerselectorControl;\n"],"sourceRoot":""}